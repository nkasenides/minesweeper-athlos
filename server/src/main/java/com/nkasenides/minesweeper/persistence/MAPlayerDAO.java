/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 16-11-2021 12:37:22
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package com.nkasenides.minesweeper.persistence;


import com.nkasenides.athlos.persistence.*;
import com.nkasenides.minesweeper.model.*;
import com.raylabz.objectis.Objectis;

import java.util.ArrayList;
import java.util.List;
import java.util.Collection;


public class MAPlayerDAO implements MultiDAO<MAPlayer> {


    @Override
    public boolean create(MAPlayer object) {
        Objectis.create(object); //NEW
        return true; //NEW
    }

    @Override
    public boolean update(MAPlayer object) {
        Objectis.update(object); //NEW
        return true; //NEW
    }

    @Override
    public boolean delete(MAPlayer object) {
        Objectis.delete(object); //NEW
        return true;
    }

    @Override
    public MAPlayer get(String id) {
        return Objectis.get(MAPlayer.class, id); //NEW
    }

    @Override
    public Collection<MAPlayer> getMany(String... ids) {
        return Objectis.getMany(MAPlayer.class, ids); //NEW
    }

    @Override
    public Collection<MAPlayer> list() {
        return Objectis.list(MAPlayer.class); //NEW
    }

    @Override
    public boolean create(Collection<MAPlayer> objects) {
        Objectis.createAll(new ArrayList<>(objects)); //NEW
        return true;
    }

    @Override
    public boolean update(Collection<MAPlayer> objects) {
        for (MAPlayer object : objects) { //NEW
            Objectis.update(object); //NEW
        } //NEW
        return true; //NEW
    }

    @Override
    public boolean delete(Collection<MAPlayer> objects) {
        Objectis.deleteAll(new ArrayList<>(objects)); //NEW
        return true; //NEW
    }


     /**
     * Retrieve a player by name.
     * @param name The name of the player.
     * @return Returns a Player object.
     */
    public MAPlayer getByName(String name) {
        final Collection<MAPlayer> list = list(); //NEW
        for (MAPlayer maPlayer : list) { //NEW
            if (maPlayer.getName().equals(name)) { //NEW
                return maPlayer; //NEW
            } //NEW
        } //NEW
        return null; //NEW
    }

}


