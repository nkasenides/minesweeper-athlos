/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 16-11-2021 12:37:08
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

syntax = "proto3";
package com.nkasenides.minesweeper.proto;
option java_package = "com.nkasenides.minesweeper.proto";
option java_outer_classname = "MProto";
option java_multiple_files = true;
//--------------------------------------------------------------------------------
//-- CUSTOM TYPES

message PartialStatePreferenceProto {
  int32 width = 1;
  int32 height = 2;
}

//--------------------------------------------------------------------------------
//-- CUSTOM ENUMS

enum Difficulty {
  EASY_Difficulty = 0;
  MEDIUM_Difficulty = 1;
  HARD_Difficulty = 2;
}

enum RevealState {
  REVEALED_8_RevealState = 0;
  REVEALED_7_RevealState = 1;
  FLAGGED_RevealState = 2;
  REVEALED_4_RevealState = 3;
  REVEALED_3_RevealState = 4;
  REVEALED_6_RevealState = 5;
  REVEALED_5_RevealState = 6;
  REVEALED_0_RevealState = 7;
  COVERED_RevealState = 8;
  REVEALED_2_RevealState = 9;
  REVEALED_1_RevealState = 10;
  REVEALED_MINE_RevealState = 11;
}

enum GameState {
  ENDED_LOST_GameState = 0;
  NOT_STARTED_GameState = 1;
  STARTED_GameState = 2;
  ENDED_WON_GameState = 3;
}

//--------------------------------------------------------------------------------
//-- ATHLOS GAME MODEL

message GeoPositionProto {
  float x = 1;
  float y = 2;
  float z = 3;
  string positionHash = 4;
}

message MatrixPositionProto {
  sint32 row = 1;
  sint32 col = 2;
  string cellHash = 3;
  string chunkHash = 4;
}

enum Direction4 {
  NORTH = 0;
  EAST = 1;
  SOUTH = 2;
  WEST = 3;
}

enum Direction6 {
  NORTH6 = 0;
  NORTH_EAST = 1;
  SOUTH_EAST = 2;
  SOUTH6 = 3;
  SOUTH_WEST = 4;
  NORTH_WEST = 5;
}

enum Rotation {
  CLOCKWISE = 0;
  COUNTER_CLOCKWISE = 1;
}

enum Movement4 {
  FORWARD = 0;
  BACKWARD = 1;
  LEFTWARD = 2;
  RIGHTWARD = 3;
}

enum Movement6 {
  FORWARD6 = 0;
  FORWARD_RIGHT = 1;
  BACKWARD_RIGHT = 2;
  BACKWARD6 = 3;
  BACKWARD_LEFT = 4;
  FORWARD_LEFT = 5;
}

enum WorldType {
  UNIFORM = 0;
  TILE_SQUARE = 1;
  TILE_HEX = 2;
}

message MAGameSessionProto {
  string ipAddress = 1;
  uint64 expiresOn = 2;
  string id = 3;
  uint64 createdOn = 4;
  string playerID = 5;
}

message MAWorldSessionProto {
  PartialStatePreferenceProto partialStatePreference = 1;
  string worldID = 2;
  string playerName = 3;
  string ipAddress = 4;
  MatrixPositionProto cameraPosition = 5;
  uint64 expiresOn = 6;
  string id = 7;
  uint64 createdOn = 8;
  string playerID = 9;
  int32 points = 10;
}

message MAPlayerProto {
  string password = 1;
  string teamID = 2;
  string name = 3;
  string id = 4;
  uint64 createdOn = 5;
}

message MATeamProto {
  string name = 1;
  string id = 2;
  string ownerID = 3;
  repeated string playerIDs = 4;
  uint32 playerLimit = 5;
}

//- Entities:

message MAEntityProto {
  string worldID = 1;
  float areaOfInterest = 2;
  string id = 3;
  MatrixPositionProto position = 4;
  string playerID = 5;
  Direction4 direction = 6;
}

//- Actions:

message MAActionProto {
}

message MATerrainCellProto {
  RevealState revealState = 1;
  MatrixPositionProto position = 2;
  bool isMined = 3;
}

message MAStateUpdateProto {
  MAPartialStateProto partialState = 1;
  string worldSessionID = 2;
  repeated string removedEntities = 3;
  repeated string removedTerrain = 4;
  uint64 timestamp = 5;
}

message MATerrainChunkProto {
  string id = 1;
  string worldID = 2;
  MatrixPositionProto position = 3;
  map<string, MATerrainCellProto> cells = 4;
}

message MATerrainIdentifierProto {
  string id = 1;
  string chunkID = 2;
  string worldID = 3;
  MatrixPositionProto chunkPosition = 4;
}

message MAPartialStateProto {
  map<string,MAEntityProto> entities = 1;
  MAWorldSessionProto worldSession = 2;
  map<string,MATerrainCellProto> terrain = 3;
  uint64 timestamp = 4;
}

message MAWorldProto {
  Difficulty difficulty = 1;
  sint64 maxRows = 2;
  uint32 heightLimit = 3;
  uint32 maxPlayers = 4;
  sint64 seed = 5;
  string name = 6;
  repeated string chunkIDs = 7;
  string id = 8;
  string ownerID = 9;
  uint64 createdOn = 10;
  sint64 maxCols = 11;
  repeated string subscribedSessionIDs = 12;
}

//--------------------------------------------------------------------------------
//- Requests:

message Request {
  oneof request {
    StartGameRequest startGameRequest = 1;
    FlagRequest flagRequest = 2;
    ListGamesRequest listGamesRequest = 3;
    GetStateRequest getStateRequest = 4;
    RevealRequest revealRequest = 5;
    SubscribeRequest subscribeRequest = 6;
    MoveRequest moveRequest = 7;
    UpdateStateRequest updateStateRequest = 8;
    CreateGameRequest createGameRequest = 9;
    ViewGameRequest viewGameRequest = 10;
    JoinGameRequest joinGameRequest = 11;
  }
}

message StartGameRequest {
  string gameID = 1;
}

message FlagRequest {
  string worldSessionID = 1;
  MatrixPositionProto position = 2;
}

message ListGamesRequest {
}

message GetStateRequest {
  string worldSessionID = 1;
}

message RevealRequest {
  string worldSessionID = 1;
  MatrixPositionProto position = 2;
}

message SubscribeRequest {
  string gameID = 1;
  int32 partialStateHeight = 2;
  string worldSessionID = 3;
  int32 partialStateWidth = 4;
}

message MoveRequest {
  MatrixPositionProto movePosition = 1;
  string worldSessionID = 2;
}

message UpdateStateRequest {
  string worldSessionID = 1;
}

message CreateGameRequest {
  Difficulty difficulty = 1;
  uint32 width = 2;
  uint32 maxPlayers = 3;
  uint32 height = 4;
}

message ViewGameRequest {
  string gameID = 1;
  int32 partialStateHeight = 2;
  int32 partialStateWidth = 3;
  MatrixPositionProto startPosition = 4;
}

message JoinGameRequest {
  string gameID = 1;
  string gameSessionID = 2;
  PartialStatePreferenceProto partialStatePreference = 3;
}

//--------------------------------------------------------------------------------
//- Responses:

message Response {
  oneof response {
    StartGameResponse startGameResponse = 1;
    MoveResponse moveResponse = 2;
    ViewGameResponse viewGameResponse = 3;
    GetStateResponse getStateResponse = 4;
    RevealResponse revealResponse = 5;
    UpdateStateResponse updateStateResponse = 6;
    CreateGameResponse createGameResponse = 7;
    JoinGameResponse joinGameResponse = 8;
    SubscribeResponse subscribeResponse = 9;
    ListGameResponse listGameResponse = 10;
  }
}

message StartGameResponse {
  enum Status {
    INVALID_GAME_ID = 0;
    OK = 1;
    CANNOT_START_GAME = 2;
  }
  string message = 1;
  Status status = 2;
}

message MoveResponse {
  enum Status {
    GAME_NOT_FOUND = 0;
    INVALID_WORLD_SESSION_ID = 1;
    INVALID_MOVE = 2;
    GAME_NOT_STARTED = 3;
    GAME_ENDED = 4;
  }
  string message = 1;
  Status status = 2;
}

message ViewGameResponse {
  enum Status {
    CANNOT_RETRIEVE_STATE = 0;
    INVALID_GAME_ID = 1;
    OK = 2;
  }
  string message = 1;
  Status status = 2;
}

message GetStateResponse {
  enum Status {
    SERVER_ERROR = 0;
    NO_SUCH_WORLD_SESSION = 1;
    INVALID_DATA = 2;
    NOT_AUTHORIZED = 3;
    CANNOT_COMPOSE_STATE = 4;
    OK = 5;
  }
  MAPartialStateProto partialState = 1;
  string message = 2;
  Status status = 3;
}

message RevealResponse {
  enum Status {
    INVALID_WORLD_SESSION_ID = 0;
    INVALID_GAME = 1;
    OTHER_ERROR = 2;
    GAME_NOT_STARTED = 3;
    GAME_ENDED = 4;
    OK = 5;
    CELL_ALREADY_REVEALED = 6;
  }
  string message = 1;
  Status status = 2;
}

message UpdateStateResponse {
  enum Status {
    SERVER_ERROR = 0;
    NO_SUCH_WORLD_SESSION = 1;
    INVALID_DATA = 2;
    NOT_AUTHORIZED = 3;
    CANNOT_COMPOSE_STATE = 4;
    OK = 5;
  }
  string message = 1;
  MAStateUpdateProto stateUpdate = 2;
  Status status = 3;
}

message CreateGameResponse {
  enum Status {
    SERVER_ERROR = 0;
    INVALID_PASSWORD = 1;
    INVALID_DIFFICULTY = 2;
    INVALID_GAME_SIZE = 3;
    OK = 4;
  }
  string message = 1;
  Status status = 2;
}

message JoinGameResponse {
  enum Status {
    CANNOT_JOIN = 0;
    INVALID_GAME_SESSION_ID = 1;
    OK = 2;
  }
  string message = 1;
  Status status = 2;
}

message SubscribeResponse {
  enum Status {
    INVALID_WORLD_SESSION_ID = 0;
    CANNOT_SUBSCRIBE = 1;
    INVALID_GAME_ID = 2;
    OK = 3;
  }
  string message = 1;
  Status status = 2;
}

message ListGameResponse {
  enum Status {
    OK = 0;
  }
  string message = 1;
  Status status = 2;
}

//--------------------------------------------------------------------------------
//- Services:

service MAServiceProto {
    rpc ListGames(StartGameRequest) returns (StartGameResponse);    
    rpc StartGame(StartGameRequest) returns (StartGameResponse);    
    rpc Move(MoveRequest) returns (MoveResponse);    
    rpc CreateGame(CreateGameRequest) returns (CreateGameResponse);    
    rpc GetState(GetStateRequest) returns (GetStateResponse);    
    rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);    
    rpc JoinGame(JoinGameRequest) returns (JoinGameResponse);    
    rpc ViewGame(ViewGameRequest) returns (ViewGameResponse);    
    rpc Flag(FlagRequest) returns (RevealResponse);    
    rpc Reveal(RevealRequest) returns (RevealResponse);    
}
//--------------------------------------------------------------------------------
